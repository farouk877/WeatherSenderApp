{"version":3,"sources":["TitleComponent.js","App.js","serviceWorker.js","index.js","weather.svg"],"names":["Title","Typography","TitleComponent","className","src","weatherIcon","alt","level","Component","Text","App","props","state","apiResponse","dbResponse","isLoading","subscribeError","phoneNumber","zipcode","phoneNumberStatus","zipcodeStatus","resultBoxVisible","onTextboxChangePhoneNumber","bind","onTextboxChangeZipcode","onTextboxChangeTimePreference","onSubscribe","unsubscribeClicked","this","callAPI","callDB","fetch","then","res","text","setState","catch","err","event","ph","target","value","replace","substring","deleteKey","length","len","trimmedPhoneLength","preferencea","document","getElementById","checked","preferenceb","time_preference","trimmedPhoneNumber","method","headers","body","JSON","stringify","timePreference","json","setTimeout","success","message","x","style","display","strong","id","onClick","code","copyable","type","onChange","addonBefore","MessageOutlined","color","suffix","CheckCircleOutlined","size","placeholder","PushpinOutlined","Group","Button","shape","loading","visibility","slice","showIcon","href","rel","LinkedinFilled","HomeFilled","MailFilled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","module","exports"],"mappings":"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","file":"static/js/main.e481e247.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport weatherIcon from './weather.svg';\nimport { Typography } from 'antd';\nconst { Title } = Typography;\n\nclass TitleComponent extends Component {\n    render() {\n        return(\n            <>\n            <div className=\"TitleContainer\">\n                <div className=\"ImageContainer\">\n                    <img src={weatherIcon} alt='sunlogo' className=\"App-logo\" />\n                </div>\n                <div className=\"TitleTextContainer\">\n                    <Title level={3}>Weather<br/>Sender</Title>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default TitleComponent;","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport './App.css';\nimport TitleComponent from './TitleComponent'\nimport { Input, Radio, Typography, Alert } from 'antd';\nimport { MessageOutlined, PushpinOutlined, CheckCircleOutlined, LinkedinFilled, HomeFilled, MailFilled } from '@ant-design/icons';\nconst { Text } = Typography;\nconst GREEN = '#009100';\nconst LIGHTGRAY = '#c8c8c8';\nconst ORANGE = '#f0a400';\nconst BLUE = '#3474eb';\nconst RED = '#eb3434'\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        apiResponse: '',\n        dbResponse: '',\n        isLoading: false,\n        subscribeError: '',\n        phoneNumber: '',\n        zipcode: '',\n        phoneNumberStatus: LIGHTGRAY,\n        zipcodeStatus: LIGHTGRAY,\n        resultBoxVisible: 'hidden',\n    };\n    this.onTextboxChangePhoneNumber = this.onTextboxChangePhoneNumber.bind(this);\n    this.onTextboxChangeZipcode = this.onTextboxChangeZipcode.bind(this);\n    this.onTextboxChangeTimePreference = this.onTextboxChangeTimePreference.bind(this);\n    this.onSubscribe = this.onSubscribe.bind(this);\n    this.unsubscribeClicked = this.unsubscribeClicked.bind(this);\n\n\n  }\n\n\n  componentDidMount() {\n    this.callAPI();\n    this.callDB();\n  }\n\n  callAPI() {\n    fetch(\"https://weathersenderapp.herokuapp.com/testAPI\")\n        .then(res => res.text())\n        .then(res => this.setState({ apiResponse: res }))\n        .catch(err => err);\n  }\n\n  callDB() {    \n    fetch(\"https://weathersenderapp.herokuapp.com/testDB\")        \n      .then(res => res.text())        \n      .then(res => this.setState({ dbResponse: res }))        \n      .catch(err => err);\n  }\n\n  onTextboxChangePhoneNumber(event) {\n    var ph = event.target.value.replace(/\\D/g,'').substring(0,10);\n    var deleteKey = false;\n    if (ph.length < this.state.phoneNumber.length) {\n      deleteKey = true;\n    }    \n    var len = ph.length;\n    if(len===0){\n        // do nothing\n    }else if(len<3){\n        ph='('+ph;\n    }else if(len===3){\n        ph = '('+ph + (deleteKey ? '' : ') ');\n    } else if(len<6){\n        ph='('+ph.substring(0,3)+') '+ph.substring(3,6);\n    }else if(len===6){\n        ph='('+ph.substring(0,3)+') '+ph.substring(3,6)+ (deleteKey ? '' : '-');\n    }else{\n        ph='('+ph.substring(0,3)+') '+ph.substring(3,6)+'-'+ph.substring(6,10);\n    }\n    event.target.value = ph;\n    this.setState({\n      phoneNumber: event.target.value\n    });\n    const trimmedPhoneLength = event.target.value.replace(/\\D/g,'').substring(0,10).length;\n    if (trimmedPhoneLength === 10) {\n      this.setState({\n        phoneNumberStatus: GREEN\n      });\n    } else if (trimmedPhoneLength !== 0 && trimmedPhoneLength !== 10) {\n      this.setState({\n        phoneNumberStatus: ORANGE\n      });\n    } else {\n      this.setState({\n        phoneNumberStatus: LIGHTGRAY\n      });\n    }\n  }\n\n  onTextboxChangeZipcode(event) {\n    var ph = event.target.value.replace(/\\D/g,'').substring(0,5);\n    event.target.value = ph;\n    this.setState({\n      zipcode: event.target.value\n    });\n    if (event.target.value.length === 5) {\n      this.setState({\n        zipcodeStatus: GREEN\n      });\n    } else if (event.target.value.length !== 0 && event.target.value.length !== 5) {\n      this.setState({\n        zipcodeStatus: ORANGE\n      });\n    } else {\n      this.setState({\n        zipcodeStatus: LIGHTGRAY\n      });\n    }\n  }\n\n  onTextboxChangeTimePreference(event) {\n    \n    \n  }\n\n  onSubscribe(event) {\n    // Grab state of inputs\n    const {\n      phoneNumber,\n      zipcode,\n    } = this.state;\n\n    this.setState({\n      isLoading: true,\n      resultBoxVisible:'hidden'\n    });\n\n    // Grab time preference\n    let preferencea = document.getElementById(\"preferencea\").checked\n    let preferenceb = document.getElementById(\"preferenceb\").checked\n    let time_preference = '';\n    if (preferencea) {\n      time_preference = 'A';\n    } else if (preferenceb) {\n      time_preference = 'B';\n    }\n\n    let trimmedPhoneNumber = phoneNumber;\n    trimmedPhoneNumber = trimmedPhoneNumber.replace(/\\D/g,'').substring(0,10);\n\n    // Post request to backend\n    fetch('https://weathersenderapp.herokuapp.com/subscribe', { \n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        phoneNumber: trimmedPhoneNumber,\n        zipcode: zipcode,\n        timePreference: time_preference\n      })\n    })\n      .then(res => res.json())\n      .then(json => {\n        setTimeout(() => {\n          this.setState({ isLoading: false });\n          if (json.success) {\n            this.setState({\n              subscribeError: json.message,\n              // isLoading: false,\n              phoneNumber: '',\n              zipcode: '',\n              resultBoxVisible: 'visible',\n              phoneNumberStatus: LIGHTGRAY,\n              zipcodeStatus: LIGHTGRAY\n            });\n          } else {\n            this.setState({\n              subscribeError: json.message,\n              // isLoading: false,\n              resultBoxVisible: 'visible',\n            });\n          }\n        }, 500);\n      });\n\n  }\n\n  unsubscribeClicked() {\n    var x = document.getElementById(\"unsubscribeMessage\").style;\n    if (x.display === \"none\" || x.display === '') {\n      x.display = \"inline-block\";\n    } else {\n      x.display = \"none\";\n    }\n  }\n\n  render() {\n    const { \n      isLoading,\n      subscribeError,\n      phoneNumber,\n      zipcode,\n      phoneNumberStatus,\n      zipcodeStatus,\n      resultBoxVisible\n    } = this.state;\n  \n    return (\n      <>\n      <div className=\"App\" >\n          <div className=\"parentContainer\">\n            <TitleComponent />\n              <div className=\"Introduction\">\n                <Text strong>\n                  Welcome to WeatherSender!\n                </Text>\n                <br/>\n                <Text>\n                  Subscribe to our free daily weather updates via SMS.\n                </Text>\n                <br/>\n                <Text>\n                  Available for United States only.\n                </Text>\n                <br/>\n                <div className=\"unsubscribeText\">\n                  <span id=\"unsubscribeButton\" onClick={this.unsubscribeClicked}>\n                    <Text code>Unsubscribe</Text>\n                  </span>\n                  <Text> anytime.</Text>\n                </div>\n                <div id=\"unsubscribeMessage\">\n                  <Text copyable={{text: '8333070777'}}>To unsubscribe, text 'REMOVE' to +1 (833) 307-0777</Text>\n                </div>\n              </div>\n\n              <div className=\"InputContainer\">\n                <div className=\"InputField\">\n                  <Input\n                    type=\"text\"\n                    value={phoneNumber} \n                    onChange={this.onTextboxChangePhoneNumber}\n                    addonBefore={<MessageOutlined style={{ color: '#08c' }}/>} \n                    suffix={<CheckCircleOutlined style={{ color: phoneNumberStatus }}/>} \n                    size=\"large\" \n                    placeholder=\"Phone Number\" \n                    \n                    />\n                </div>\n\n                <div className=\"InputField\">\n                  <Input \n                    type=\"text\" \n                    value={zipcode} \n                    onChange={this.onTextboxChangeZipcode} \n                    addonBefore={<PushpinOutlined style={{ color: '#08c' }}/>}\n                    suffix={<CheckCircleOutlined style={{ color: zipcodeStatus }}/>} \n                    size=\"large\" \n                    placeholder=\"Zipcode\" \n                    />\n                </div>\n              </div>\n              \n              <div className=\"RadioContainer\">\n                <Text>Send weather updates at:</Text>\n                <Radio.Group size=\"large\">\n                  <Radio.Button id=\"preferencea\" value=\"preferencea\" className=\"RadioButton\" onChange={this.onTextboxChangeTimePreference}>9pm for next day</Radio.Button><br/>\n                  <Radio.Button id=\"preferenceb\" value=\"preferenceb\" className=\"RadioButton\" onChange={this.onTextboxChangeTimePreference}>6am for same day</Radio.Button>\n                </Radio.Group>\n              </div>\n              \n              <div className=\"subscribeButton\">\n                <Button type=\"primary\" onClick={this.onSubscribe} size='large' shape='round' loading={isLoading}>Subscribe</Button>\n              </div>\n\n              <div id=\"subscriptionStatusBox\" style={{visibility:resultBoxVisible}}>\n                <Alert message={subscribeError} type={subscribeError.slice(0,1)!=='S' ? 'error' : 'success'} showIcon />\n              </div>\n\n              <div className=\"footer\">\n                <div className=\"copyright\">\n                  <Text>&copy; WeatherSender 2020</Text>\n                </div>\n                <Text>\n                  <a href=\"https://www.linkedin.com/in/faroukmarhaba/\" target=\"_blank\" rel=\"noopener noreferrer\"><LinkedinFilled style={{color:BLUE}} className=\"bottomIcons\"/></a>&nbsp;&nbsp;&nbsp;&nbsp;\n                  <a href=\"https://faroukmarhaba.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><HomeFilled style={{color:ORANGE}} className=\"bottomIcons\"/></a>&nbsp;&nbsp;&nbsp;&nbsp;\n                  <a href=\"mailto:hello@weathersender.com\"><MailFilled style={{color:RED}} className=\"bottomIcons\"/></a>\n                </Text>\n              </div>\n          </div>\n      </div>\n    </>\n    );\n    \n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/weather.f197597c.svg\";"],"sourceRoot":""}